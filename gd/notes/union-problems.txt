# Smaller things are smaller
:blurb Larger things are larger.

Sometimes there’s something like:

Person one has problem 𝐀 and person two has solved the similar problem 𝐁. And maybe person two extends their solution so that it solves 𝐀∪𝐁 and person one can reuse it. The solution can keep growing like that.

And in many cases, person one learning a little about the solution to 𝐁 could possibly be like, enough. If 𝐁 is simpler than 𝐀∪𝐁 it might be easier to learn from the 𝐁-solution. Taking inspiration from it when solving 𝐀 could lead to two simpler solutions instead of one more complex.

## Somewhat related Chuck Moore thing

> Do It Yourself!

> The conventional approach, enforced to a greater or lesser extent, is that you shall use a standard subroutine. I say that you should write your own subroutines.

> Although it takes hundreds of instructions to write a general purpose subroutine, you can do what you need with tens of instructions.
=> url http://www.forth.org/POL.pdf Programming a Problem-Oriented-Language
